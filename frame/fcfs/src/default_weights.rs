
//! Autogenerated weights for `pallet_fcfs`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2021-11-29, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 128

// Executed Command:
// ./target/release/neatcoin
// benchmark
// --chain
// dev
// --execution=wasm
// --wasm-execution=compiled
// --pallet
// pallet_fcfs
// --extrinsic
// *
// --steps
// 50
// --repeat
// 20
// --output
// frame/fcfs/src/default_weights.rs
// --template
// res/default_weights.hbs


#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight as DbWeight}};
use sp_std::marker::PhantomData;

impl crate::WeightInfo for () {
	// Storage: Registry Ownerships (r:2 w:1)
	// Storage: FCFS Renewals (r:0 w:1)
	fn register() -> Weight {
		(82_002_000 as Weight)
			.saturating_add(DbWeight::get().reads(2 as Weight))
			.saturating_add(DbWeight::get().writes(2 as Weight))
	}
	// Storage: Registry Ownerships (r:2 w:0)
	// Storage: FCFS Renewals (r:1 w:1)
	fn renew() -> Weight {
		(75_002_000 as Weight)
			.saturating_add(DbWeight::get().reads(3 as Weight))
			.saturating_add(DbWeight::get().writes(1 as Weight))
	}
	// Storage: Registry Ownerships (r:1 w:1)
	// Storage: FCFS Renewals (r:1 w:1)
	fn release_expired() -> Weight {
		(44_901_000 as Weight)
			.saturating_add(DbWeight::get().reads(2 as Weight))
			.saturating_add(DbWeight::get().writes(2 as Weight))
	}
}
